services:
  wa-api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    volumes:
      - ./apps/api:/app/apps/api
    ports:
      - "3001:3001"
    env_file:
      - .env.development.local
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-lgtm:4318
    depends_on:
      - otel-lgtm
    networks:
      - otel-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  wa-bot:
    build:
      context: .
      dockerfile: apps/bot/Dockerfile
    volumes:
      - ./apps/bot:/app/apps/bot
    env_file:
      - .env.development.local
    networks:
      - otel-net
    restart: unless-stopped

  wa-web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    volumes:
      - ./apps/web:/app
      - web_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - .env.development.local
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  otel-lgtm:
    image: grafana/otel-lgtm
    container_name: otel-lgtm
    ports:
      - "3005:3000"    # Grafana UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    environment:
      - GF_SERVER_HTTP_PORT=3000
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=tempoSearch,tempoServiceGraph
    volumes:
      - otel-data-grafana:/var/lib/grafana
      - otel-data-prometheus:/prometheus
      - otel-data-tempo:/var/tempo
      - otel-data-loki:/loki
    networks:
      - otel-net
    restart: unless-stopped

volumes:
  otel-data:
  otel-data-grafana:
  otel-data-prometheus:
  otel-data-tempo:
  otel-data-loki:
  api_node_modules:
  bot_node_modules:
  web_node_modules:

networks:
  otel-net:
    driver: bridge